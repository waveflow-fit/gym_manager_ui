name: Build and Push Docker Image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from package.json
        id: get_version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  copy-source-code:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          path: source

      - name: Checkout destination repository
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.DESTINATION_REPO }}
          token: ${{ secrets.DESTINATION_PAT }}
          path: destination

      - name: Copy source code
        run: |
          # Create a temporary directory for the source code
          mkdir -p destination/src

          # Copy only the src directory and necessary config files
          cp -r source/src/* destination/src/
          cp source/package.json destination/
          cp source/package-lock.json destination/
          cp source/tsconfig.json destination/
          cp source/next.config.ts destination/
          cp source/.env* destination/ || true

          # Create a .gitignore if it doesn't exist
          touch destination/.gitignore

          # Add common Node.js ignores
          cat << EOF > destination/.gitignore
          node_modules/
          .next/
          .env
          .env.local
          .env.development.local
          .env.test.local
          .env.production.local
          npm-debug.log*
          yarn-debug.log*
          yarn-error.log*
          EOF

      - name: Commit and push changes
        run: |
          cd destination
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add .
          git commit -m "chore: update source code from ${{ github.repository }} [skip ci]"
          git push
